<?php
namespace app\components;

use app\modules\admin\models\Lang;
use app\models\MetaTags;
use Yii;
use yii\base\Behavior;
use yii\db\ActiveRecord;

class MetaBehavior extends Behavior
{
    /**
     * Multilingual attributes
     * @var array
     */
    public $fields = [
        'title',
        'keywords',
        'description',
        'og__image',
    ];
    public $metaData = [];
    /**
     * @inheritdoc
     */
    public function events()
    {
        return [
            ActiveRecord::EVENT_AFTER_FIND => 'afterFind',
            ActiveRecord::EVENT_AFTER_UPDATE => 'afterUpdate',
            ActiveRecord::EVENT_AFTER_INSERT => 'afterUpdate',
            ActiveRecord::EVENT_BEFORE_UPDATE => 'beforeUpdate',
            ActiveRecord::EVENT_BEFORE_INSERT => 'beforeUpdate',
            ActiveRecord::EVENT_AFTER_DELETE => 'afterDelete',
            ActiveRecord::EVENT_BEFORE_VALIDATE => 'beforeValidate',
        ];
    }

    public function setMetaTags(){
        if($this->metaData){
            foreach ($this->fields as $metaKey) {
                if ($this->metaData->$metaKey) {
                    \Yii::$app->view->registerMetaTag([
                        'name' => str_replace('__', ':', $metaKey),
                        'content' => $this->metaData->$metaKey
                    ]);
                }
            }
        }
    }

    public function renderMetaDataForm($lang='', $form){
        if($lang){
            $lang = '_' . $lang;
        }

        return Yii::$app->controller->renderPartial('//layouts/_metaDataForm', [
            'model' => $this->metaData,
            'form' => $form,
            'lang' => $lang,
            'fields' => $this->fields
        ]);
    }

    public function __call($name, $parameters) {
        if( in_array($name, ['setMetaTags', 'renderMetaDataForm']) ) {
            $this->{$name}();
        }
        return parent::__call($name, $parameters);
    }

    public function afterFind(){

        $module = Yii::$app->controller->module->id;


        $modelName = basename($this->owner->className());
        $model = MetaTags::find()
            ->where(['model' => $modelName, 'model_id' => $this->owner->id])
            ->multilingual()
            ->one();

        if($model || $module=='admin'){
            if(!$model){
                $model = new MetaTags();
            }
            $this->metaData = $model;
        }

    }

    public function init()
    {
        $module = Yii::$app->controller->module->id;
        if($module=='admin'){
            $model = new MetaTags();
            $this->metaData = $model;
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function beforeUpdate(){

    }

    public function afterUpdate(){
        $module = Yii::$app->controller->module->id;
        if($module!='admin'){
            return;
        }

        $postData = Yii::$app->request->post();

        $modelName = basename(str_replace('\\','/',$this->owner->className()));
        $model = MetaTags::find()
            ->where(['model' => $modelName, 'model_id' => $this->owner->id])
            ->multilingual()
            ->one();

        if (!$model) {
            $model = new MetaTags();
            $model->model = $modelName;
            $model->model_id = $this->owner->id;
        }

        if($model->load($postData) && $model->save()){

        }

    }
    public function afterDelete(){
        $modelName = basename($this->owner->className());
        $model = MetaTags::find()
            ->where(['model' => $modelName, 'model_id' => $this->owner->id])
            ->multilingual()
            ->one();
        if($model){
            $model->delete();
        }
    }
    public function beforeValidate(){

    }
}
